{"version":3,"sources":["HeaderMenu.js","Cards.js","data/rectangle_java.jpg","data/rectangle_python.jpg","data/rectangle_scala.jpg","data/vehicle_java.jpg","data/vehicle_python.jpg","data/vehicle_scala.jpg","data/q1.jpg","data/q2.jpg","CartesianPlot.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderMenu","props","state","data","lang","Object","keys","id","changeData","bind","value","this","setState","prev","current","changeID","console","log","mutateMenu","langList","randLang","Math","floor","random","length","randIndex","className","classNames","type","data-toggle","map","index","onClick","changeLanguage","href","selectRandomUser","React","Component","label1Col","label2Col","label3Col","initLabels","labels","filter","item","slice","Cards","Card","bg","text","style","background","changeCardBg","Body","Title","Text","CartesianPlot","transformData","coordinates","imagePath","img1","lineType","tempObj1","tempObj2","rectangleData","vehicleData","temp1","temp2","i","push","prevProps","makePath","e","preventDefault","pt","img4","img5","img6","img2","img3","img7","img8","backgroundImage","width","height","margin","right","bottom","left","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","name","domain","tickCount","unit","dot","fillOpacity","stroke","strokeWidth","Button","variant","changeIndex","changeLineType","indexMap","Array","fill","languages","itr","indexOf","initIndexMap","langSet","Set","experiment_language","add","str","from","initMenuItems","App","cardData","cartesianPlotData","rectangle_java","vehicle_java","LoadDataFromMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2a7ece8.chunk.js","sourcesContent":["import React from 'react';\nimport './headerStyle.css'\nimport classNames from 'classnames';\n\nclass HeaderMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.data,\n            lang: Object.keys(this.props.data)[0],\n            id: this.props.data[\"Java\"][0],\n        }\n        // console.log(this.state.data);\n        this.changeData = this.changeData.bind(this);\n    }\n\n    changeLanguage(value) {\n        this.setState((prev, current) => ({\n            lang: value,\n        }), () => {\n            this.changeID(this.state.data[this.state.lang][0])\n            console.log(\"Language changed to :\", this.state.lang);\n        });\n    }\n\n    changeID(value) {\n        this.setState((prev, current) => ({\n            id: value,\n        }), () => {\n            console.log(\"ID changed  to :\", this.state.id);\n        });\n    }\n\n    changeData() {\n        let value = {\n            \"lang\": this.state.lang,\n            \"id\": this.state.id,\n        }\n        this.props.mutateMenu(value);\n    }\n\n    selectRandomUser(){\n        let langList = Object.keys(this.state.data);\n        let randLang = langList[Math.floor(Math.random() * langList.length)];\n        let randIndex = Math.floor(Math.random() * this.state.data[randLang].length);\n        this.setState((prev, current) => ({\n            lang: randLang,\n            id: this.props.data[randLang][randIndex]\n        }), () => {\n            console.log(\"Random User Selected :\", \"id:\", this.state.id, \"lang:\", randLang);\n            this.changeData();\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"header\"}>\n                    <div className={classNames(\"title\", \"rainbow_text_animated\")} >\n                        Eye Movement in Programming\n                    </div>\n                    <div className={\"menu\"}>\n                        <div id={\"menuItems\"}>\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\"\n                                        data-toggle=\"dropdown\"> {this.state.lang}\n                                    <span className=\"caret\"/></button>\n                                <ul className=\"dropdown-menu\">\n                                    {Object.keys(this.state.data).map((value, index) => {\n                                        return <li key={value} onClick={() => this.changeLanguage(value)}><a href={\"#\"}>{value}</a>\n                                        </li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div id={\"menuItems\"}>\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\"\n                                        data-toggle=\"dropdown\"> {this.state.id}\n                                    <span className=\"caret\"/></button>\n                                <ul className=\"dropdown-menu\">\n                                    {this.props.data[this.state.lang].map((value) => {\n                                        return <li key={value} onClick={() => this.changeID(value)}><a href={\"#\"}>{value}</a></li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div id={\"menuItems\"}>\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\"\n                                        data-toggle=\"dropdown\" onClick={() => this.changeData()}> GO\n                                </button>\n                            </div>\n                        </div>\n                        <div id={\"menuItems\"}>\n                            <div className=\"dropdown\">\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\"\n                                        data-toggle=\"dropdown\" onClick={() => this.selectRandomUser()}>Random User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HeaderMenu;\n","import React from 'react';\nimport './cardStyle.css'\nimport Card from 'react-bootstrap/Card'\n\nlet label1Col = [];\nlet label2Col = [];\nlet label3Col = [];\n\n\nfunction initLabels(value) {\n    let labels = Object.keys(value);\n    labels = labels.filter(item => (item !== 'vehicle_java' && item !== 'rectangle_java'));\n    label1Col = labels.slice(0, 10);\n    label2Col = labels.slice(10, 19);\n    label3Col = labels.slice(19, -1);\n    return labels;\n}\n\nclass Cards extends React.Component {\n    static getDerivedStateFromProps(props, state) {\n        if (props !== state) {\n            return {\n                data: props.data\n            };\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.data,\n            labels: initLabels(this.props.data)\n        }\n    }\n\n    changeCardBg(value) {\n        if (value === 'correct_vehicle' || value === 'correct_rectangle') {\n            if (this.state.data[value] === 1) {\n                return \"linear-gradient(to right, #76b852, #8dc26f)\";\n            } else {\n                return \"linear-gradient(to right, #ed213a, #93291e)\";\n            }\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <>\n                <div className={\"cardsColumn1\"}>\n                    {label1Col.map((value, index) => {\n                        return (\n                            <Card bg=\"primary\" text=\"white\" className={\"cards\"}\n                                  style={{background: this.changeCardBg(value)}} key={value}>\n                                <Card.Body>\n                                    <Card.Title>{value}</Card.Title>\n                                    <Card.Text>\n                                        {this.state.data[value]}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                </div>\n                <div className={\"cardsColumn2\"}>\n                    {label2Col.map((value, index) => {\n                        return (\n                            <Card bg=\"primary\" text=\"white\" className={\"cards\"}\n                                  style={{background: this.changeCardBg(value)}} key={value}>\n                                <Card.Body>\n                                    <Card.Title>{value}</Card.Title>\n                                    <Card.Text>\n                                        {this.state.data[value]}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                </div>\n                <div className={\"cardsColumn3\"}>\n                    {label3Col.map((value, index) => {\n                        return (\n                            <Card bg=\"primary\" text=\"white\" className={\"cards\"}\n                                  style={{background: this.changeCardBg(value)}} key={value}>\n                                <Card.Body>\n                                    <Card.Title>{value}</Card.Title>\n                                    <Card.Text>\n                                        {this.state.data[value]}\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Cards;","export default __webpack_public_path__ + \"static/media/rectangle_java.40b79f4b.jpg\";","export default __webpack_public_path__ + \"static/media/rectangle_python.4d3d7e86.jpg\";","export default __webpack_public_path__ + \"static/media/rectangle_scala.5faf29cf.jpg\";","export default __webpack_public_path__ + \"static/media/vehicle_java.2087cc3c.jpg\";","export default __webpack_public_path__ + \"static/media/vehicle_python.2801df76.jpg\";","export default __webpack_public_path__ + \"static/media/vehicle_scala.f5795ee7.jpg\";","export default __webpack_public_path__ + \"static/media/q1.1a599f49.jpg\";","export default __webpack_public_path__ + \"static/media/q2.ce231d09.jpg\";","import React from 'react';\nimport './cartesianPlotStyle.css';\nimport img1 from './data/rectangle_java.jpg';\nimport img2 from './data/rectangle_python.jpg';\nimport img3 from './data/rectangle_scala.jpg';\nimport img4 from './data/vehicle_java.jpg';\nimport img5 from './data/vehicle_python.jpg';\nimport img6 from './data/vehicle_scala.jpg';\nimport img7 from './data/q1.jpg';\nimport img8 from './data/q2.jpg';\n\nimport Button from 'react-bootstrap/Button'\nimport {\n    XAxis, YAxis, CartesianGrid, Line, ComposedChart, Tooltip\n} from 'recharts';\n\n\nclass CartesianPlot extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.transformData(this.props.data.coordinates),\n            lang: this.props.data.lang,\n            index: 0,\n            imagePath: img1,\n            lineType: \"monotone\",\n        }\n        // console.log(this.state.data);\n    }\n\n    transformData(data) {\n        let rectangleData = [], vehicleData = [];\n        let temp1 = data[0], temp2 = data[1];\n        let length = temp1['LX'].length;\n        let tempObj1, tempObj2;\n        for (let i = 0; i < length; i++) {\n            tempObj1 = {\n                \"LX\": temp1[\"LX\"][i],\n                \"LY\": temp1[\"LY\"][i],\n            }\n            tempObj2 = {\n                \"LX\": temp2[\"LX\"][i],\n                \"LY\": temp2[\"LY\"][i],\n            }\n            rectangleData.push(tempObj1);\n            vehicleData.push(tempObj2);\n        }\n\n        return [rectangleData, vehicleData];\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.setState((prev, current) => ({\n                data: this.transformData(this.props.data.coordinates),\n                lang: this.props.data.lang\n            }), () => {\n                this.setState((prev, current) => ({\n                    imagePath: this.makePath()\n                }), () => {\n                    console.log(\"Data changed in cartesian plot\", this.state.lang, this.state.imagePath);\n                })\n            });\n        }\n    }\n\n    changeLineType(e, value) {\n        e.preventDefault();\n        this.setState((prev, current) => ({\n            lineType: value,\n        }), () => {\n            console.log(\"Line Type changed to:\", this.state.lineType);\n        });\n    }\n\n    changeIndex(e, value) {\n        e.preventDefault();\n        this.setState((prev, current) => ({\n            index: value,\n        }), () => {\n            this.setState((prev, current) => ({\n                imagePath: this.makePath()\n            }), () => {\n                console.log(\"Button changed index to :\", this.state.index);\n            })\n\n        });\n    }\n\n    makePath() {\n        let pt;\n        if (this.state.index === 1) {\n            switch (this.state.lang) {\n                default :\n                    pt = img4;\n                    break;\n                case \"Python\":\n                    pt = img5;\n                    break;\n                case \"Scala\":\n                    pt = img6;\n                    break;\n            }\n        } else if (this.state.index === 0) {\n            switch (this.state.lang) {\n                default :\n                    pt = img1;\n                    break;\n                case \"Python\":\n                    pt = img2;\n                    break;\n                case \"Scala\":\n                    pt = img3;\n                    break;\n            }\n        } else if (this.state.index === 2) {\n            pt = img7;\n        } else {\n            pt = img8;\n        }\n        return pt;\n    }\n\n    render() {\n        return (\n            <>\n                <div className={\"plotDiv\"} style={{backgroundImage: `url(${this.state.imagePath})`}}>\n                    <ComposedChart\n                        width={1060}\n                        height={605}\n                        margin={{\n                            right: 20, bottom: 20, left: 10,\n                        }}\n                        data={this.state.data[this.state.index]}\n                    >\n                        <defs>\n                            <linearGradient id=\"colorUv\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                                <stop offset=\"0%\" stopColor=\"red\" stopOpacity={0.3}/>\n                                <stop offset=\"5%\" stopColor=\"purple\" stopOpacity={0.7}/>\n                                <stop offset=\"98%\" stopColor=\"red\" stopOpacity={0.3}/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid/>\n                        <XAxis type=\"number\" dataKey=\"LX\" name=\"stature\" domain={[0, 1920]} tickCount={10} unit={'px'}/>\n                        <YAxis type=\"number\" dataKey=\"LY\" name=\"weight\" domain={[0, 1080]} tickCount={10} unit={'px'}/>\n                        <Line\n                            type={this.state.lineType}\n                            dataKey=\"LY\"\n                            dot={false}\n                            fillOpacity={1}\n                            stroke=\"url(#colorUv)\"\n                            strokeWidth={1.5}\n                        />\n                        {/*<Tooltip/>*/}\n                    </ComposedChart>\n                    <div className={\"buttonHeading\"}>\n                        Select Image\n                        <div className={\"buttonHeadingLineFunctions\"}>\n                            Select Line Function\n                        </div>\n                    </div>\n                    <div className={\"buttonDiv\"}>\n                        <hr/>\n                        <Button variant=\"primary\" onClick={e => this.changeIndex(e, 0)}>Rectangle</Button> {}\n                        <Button variant=\"primary\" onClick={e => this.changeIndex(e, 1)}>Vehicle</Button> {}\n                        <Button variant=\"primary\" onClick={e => this.changeIndex(e, 2)}>Q. Rectangle</Button> {}\n                        <Button variant=\"primary\" onClick={e => this.changeIndex(e, 3)}>Q. Vehicle</Button> {}\n                        <div className={\"lineTypeButtons\"}>\n                            <Button variant=\"primary\"\n                                    onClick={e => this.changeLineType(e, \"monotone\")}>Monotone</Button> {}\n                            <Button variant=\"primary\" onClick={e => this.changeLineType(e, \"linear\")}>Linear</Button> {}\n                            <Button variant=\"primary\"\n                                    onClick={e => this.changeLineType(e, \"linearClosed\")}>LinearClosed</Button> {}\n                            <Button variant=\"primary\" onClick={e => this.changeLineType(e, \"step\")}>Step</Button> {}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default CartesianPlot;\n","import './App.css';\nimport React from 'react';\n\nimport data from './data/data_emip.json';\nimport HeaderMenu from \"./HeaderMenu\";\nimport Cards from \"./Cards\";\nimport CartesianPlot from \"./CartesianPlot\";\n\nlet indexMap = new Array(data.length + 10).fill(0);\n\n// Language Options\nlet languages = {}\n\nfunction initIndexMap() {\n    for (let itr of data) {\n        indexMap[itr.id] = data.indexOf(itr)\n    }\n}\n\nfunction initMenuItems() {\n    let langSet = new Set();\n    for (let itr of data) {\n        if (itr.experiment_language in languages)\n            languages[itr.experiment_language].add(data.indexOf(itr));\n        else\n            languages[itr.experiment_language] = new Set()\n        langSet.add(itr.experiment_language);\n    }\n\n    for (let str in languages) {\n        languages[str] = Array.from(languages[str]);\n    }\n    // console.log(languages);\n}\n\n\nfunction init() {\n    initIndexMap();\n    initMenuItems();\n    // console.log(data);\n}\n\ninit();\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lang: \"Java\",\n            id: 0,\n            index: 0,\n            cardData: data[0],\n            cartesianPlotData: {\n                \"coordinates\": [data[0].rectangle_java, data[0].vehicle_java],\n                \"lang\": \"Java\"\n            }\n        };\n        this.LoadDataFromMenu = this.LoadDataFromMenu.bind(this);\n    }\n\n    LoadDataFromMenu(value) {\n        console.log(\"Sent from Menu\", value);\n        this.setState((prev, current) => ({\n            lang: value.lang,\n            id: value.id,\n            index: indexMap[value.id],\n        }), () => {\n            console.log(\"Parent state changed by Menu :\", value, \"index:\", this.state.index);\n            this.setState((prev, current) => ({\n                cardData: data[this.state.index],\n                cartesianPlotData: {\n                    \"coordinates\": [data[this.state.index].rectangle_java, data[this.state.index].vehicle_java],\n                    \"lang\": this.state.lang\n                }\n            }), () => {\n                console.log(\"Card data changed by Menu :\", value, \"index:\", this.state.cardData);\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <HeaderMenu data={languages} mutateMenu={this.LoadDataFromMenu}/>\n                <Cards data={this.state.cardData}/>\n                <CartesianPlot data={this.state.cartesianPlotData}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}